enum eGameCursorType
{
	eGameCursorType_Normal	= 1,	//普通
	eGameCursorType_Attack	= 2,	//攻击或者观战
	eGameCursorType_Team		= 3,	//组队
	eGameCursorType_Trade	= 4,	//交易
	eGameCursorType_Freemove	= 5,	//自由移动
	eGameCursorType_Talk		= 6,	//与NPC对话
	eGameCursorType_Given	= 7,	//给予
	//eCursorSpecial	= 8,	//特殊
	eGameCursorType_Pickup	= 8,	//拾取
	//以下是战斗中
	eGameCursorType_BattleNormal = 9,
	eGameCursorType_BattleAttack	= 10,
	eGameCursorType_BattleSkill	= 11,
	eGameCursorType_BattleCatch	= 12,
	eGameCursorType_BattleProtect= 13,
	eGameCursorType_BattleItem	= 14,
	eGameCursorType_BattleDart	= 15,	//战斗内飞镖
	//禁止样式
	eGameCursorType_Forbid		= 16,	//战斗外：组队，交易等，战斗内：选择技能，物品，保护，捕捉之后，禁止的样式	
	eGameCursorType_Flower       = 17,	//给予鲜花
	eGameCursorType_Repair		= 18,	//修理
	eGameCursorType_BattleCommand= 19,	//指挥
	eGameCursorType_FBAttack		= 20,	//帮战攻击	FB代表FactionBattle公会大战
	eGameCursorType_FBRepair		= 21,	//帮战修理
	eGameCursorType_DragonCard	= 22,	//赛船道具
	eGameCursorType_SceneSkill	= 23,	//场景技能
	eGameCursorType_Pacing		= 24,	//自动寻路
	eGameCursorType_Firework		= 25,	//使用烟花
	eGameCursorType_Identify		= 26,	//使用宝鉴鉴定装备
	eGameCursorType_ChanZi		= 27,	//农学小游戏铲子
	eGameCursorType_Replace		= 28,	//替换飞行棋的鼠标样式
	eGameCursorType_Trigger		= 29,	//点击npc触发
	eGameCursorType_SupplyFlag	= 30,
	eGameCursorType_TriggerMagnifier		= 31,	//点击npc触发放大镜
	eGameCursorType_TriggerBrush			= 32,	//点击npc触发刷子
	eGameCursorType_BreakChest		= 33,	//移到宠物迷城里箱子的鼠标样式，锤子
	eGameCursorType_Max,
};

enum eCursorState
{
	eCursorState_None,
	eCursorState_Attack,		//攻击
	eCursorState_Team,		//组队
	eCursorState_Trade,		//交易
	eCursorState_Given,		//给予
	eCursorState_SceneSkill,	//场景中使用技能
	eCursorState_GiveFlower,	//特殊道具：送花等
	eCursorState_GiveRose,	//特殊道具：送玫瑰，与eCursorState_GiveFlower区分开是因为鼠标只有移动到女性角色身上才变状态
	//eCursorStateSpecial,
	//以下是战斗内的
	eCursorState_Skill,	
	eCursorState_Item,
	eCursorState_Dart,
	eCursorState_Protect,
	eCursorState_Catch,
	eCursorState_Command,	//指挥
	eCursorState_DragonCard,	//赛船道具
	eCursorState_Max
};

class GameOperateState
{
public:
	GameOperateState();
	~GameOperateState();

	void ChangeCursorToDragonItemCard(int itemcardtype);
	void ChangeCursorToBattleCommand(std::wstring commandcontent);
	int  GetSceneSkillID();
	void SetSceneSkillID(int id);

	int	 GetDragonItemCardType();
	std::wstring GetBattleCommandString();
	void ClearUserData();
	void*GetUserData();
	void ChangeGameCursorWithUserDate(eGameCursorType type, void* pData = NULL);
	bool IsBattleOperateState();
	void SetOperateState(eCursorState e);
	eCursorState	GetOperateState();

	bool ResetBattleCursor();
	bool ResetCursor();
	void ChangeGameCursorType(eGameCursorType type, bool forceforbid = false);
	eGameCursorType	GetGameCursorType();
};

GameOperateState* gGetGameOperateState();
