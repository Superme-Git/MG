name: MT3 Android CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/android/**'
      - 'engine/**'
      - 'common/**'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      channel:
        description: '编译渠道'
        required: true
        default: 'LocojoyProject'
        type: choice
        options:
          - LocojoyProject
          - YijieProject
          - JoysdkProject
          - all

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        channel: ${{ github.event.inputs.channel == 'all' && fromJSON('["LocojoyProject", "YijieProject", "JoysdkProject"]') || fromJSON(format('["{0}"]', github.event.inputs.channel || 'LocojoyProject')) }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: 缓存NDK
        id: cache-ndk
        uses: actions/cache@v3
        with:
          path: D:\android-ndk-r10e
          key: ndk-r10e-windows

      - name: 下载NDK r10e
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          echo "下载 Android NDK r10e..."
          curl -L https://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip -o ndk.zip
          echo "解压 NDK..."
          7z x ndk.zip -oD:\ -y
          del ndk.zip

      - name: 安装Apache Ant
        run: |
          choco install ant -y

      - name: 配置环境变量
        run: |
          echo "ANDROID_HOME=$env:ANDROID_HOME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "NDK_HOME=D:\android-ndk-r10e" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "MT3_NO_PAUSE=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: 生成local.properties
        run: |
          cd client\android\${{ matrix.channel }}
          echo "sdk.dir=$($env:ANDROID_HOME -replace '\\','\\\\')" > local.properties
          cat local.properties

      - name: NDK构建
        run: |
          cd client\android\${{ matrix.channel }}
          .\mt3_build.bat

      - name: Ant打包
        run: |
          cd client\android\${{ matrix.channel }}
          ant debug

      - name: 验证APK
        run: |
          cd client\android
          .\verify_apk.bat ${{ matrix.channel }}\bin\*.apk

      - name: 上传APK
        uses: actions/upload-artifact@v3
        with:
          name: mt3-${{ matrix.channel }}-apk
          path: client/android/${{ matrix.channel }}/bin/*.apk
          retention-days: 30

      - name: 上传构建日志
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mt3-${{ matrix.channel }}-logs
          path: |
            client/android/${{ matrix.channel }}/build_logs/*.log
            client/android/build_report_*.txt
          retention-days: 7

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 发送通知
        run: |
          echo "构建完成: ${{ needs.build.result }}"
          # 这里可以添加Slack/钉钉/企业微信通知
