
// GENERATE BY RPCGEN. DO NOT EDIT THIS FILE.

#include "rpcgen.hpp"
#include "protocols.hpp"


// protocol stubs
namespace Defence { 
void _protocolsStubs(bool add)
{
	static aio::Protocol::TStub<gnet::ACPP> gnet_ACPP;
	static aio::Protocol::TStub<gnet::ACAnswer2> gnet_ACAnswer2;
	static aio::Protocol::TStub<gnet::ACReport2> gnet_ACReport2;
	static aio::Protocol::TStub<gnet::ACQuestion2> gnet_ACQuestion2;
	static aio::Protocol::TStub<gnet::ACRemoteCode2> gnet_ACRemoteCode2;
	static aio::Protocol::TStub<gnet::ACCaptcha> gnet_ACCaptcha;

	if (add)
	{
		aio::Protocol::AddStub(&gnet_ACPP);
		aio::Protocol::AddStub(&gnet_ACAnswer2);
		aio::Protocol::AddStub(&gnet_ACReport2);
		aio::Protocol::AddStub(&gnet_ACQuestion2);
		aio::Protocol::AddStub(&gnet_ACRemoteCode2);
		aio::Protocol::AddStub(&gnet_ACCaptcha);
	}
	else
	{
		aio::Protocol::DelStub(&gnet_ACPP);
		aio::Protocol::DelStub(&gnet_ACAnswer2);
		aio::Protocol::DelStub(&gnet_ACReport2);
		aio::Protocol::DelStub(&gnet_ACQuestion2);
		aio::Protocol::DelStub(&gnet_ACRemoteCode2);
		aio::Protocol::DelStub(&gnet_ACCaptcha);
	}
}


void RegisterProtocols()
{
	_protocolsStubs(true);
}

void UnregisterProtocols()
{
	_protocolsStubs(false);
}

} 

