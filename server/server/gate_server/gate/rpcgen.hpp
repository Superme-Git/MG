
#pragma once

// GENERATE BY RPCGEN. DO NOT EDIT THIS FILE.

#include <set>
#include <map>
#include <list>
#include <vector>

// share include
#include "common/conf.h"
#include "common/log.h"
#include "common/thread.h"
#include "io/protocol.h"
#include "io/rpc.h"
#include "rpc/errcode.h"

// provider id
enum {
	GNET_LINK_PVID = 1,
};

// extern state
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State DeliveryClient;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State Forward;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State GResponseReceive;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State KeyExchgSend;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State LinkImport;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State LinkProvider;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State LinkService;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State Null;
} 
} 
namespace gnet { 
namespace state { 
extern GNET::Protocol::Manager::Session::State VerifyMatrix;
} 
} 

