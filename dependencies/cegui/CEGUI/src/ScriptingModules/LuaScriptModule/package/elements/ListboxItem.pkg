/***********************************************************************
	ListboxItem
***********************************************************************/
class ListboxItem
{
public:
	string getText() const;
	unsigned int getID() const;
	void* getUserData() const;
	bool isSelected() const;
	bool isDisabled() const;
	bool isAutoDeleted() const;
	const Window* getOwnerWindow();
	ColourRect getSelectionColours() const;
	const Image* getSelectionBrushImage() const;

	void setText(string text);
	void setID(unsigned int item_id);
	void setUserData(void* item_data);
	void setSelected(bool setting);
	void setDisabled(bool setting);
	void setAutoDeleted(bool setting);
	void setOwnerWindow(const Window* owner);
	void setSelectionColours(const ColourRect& cols);
	void setSelectionColours(colour top_left_colour, colour top_right_colour, colour bottom_left_colour, colour bottom_right_colour);
	void setSelectionColours(colour col);
	void setSelectionBrushImage(const Image* image);
	void setSelectionBrushImage(string imageset, string image);

	Size getPixelSize() const;
	void SetUserID(long long id);
	long long GetUserID();

    void    setTooltipText(const string& text);

	void StartFlash(); //开始闪烁
	void StopFlash(); //停止闪烁
	bool isFlash();

	float GetFlashElapseTime();

	bool SetMouseOn(bool bIsMouseOn); //设置鼠标是否在其上 返回值表示是否要重画 true是要重画控件
	bool isMouseOn() ;

	ColourRect getModulateAlphaColourRect(const ColourRect& cols, float alpha) const;

	virtual bool isTextItem() ;
};
