
// GENERATE BY RPCGEN. DO NOT EDIT THIS FILE.

#include "rpcgen.hpp"
#include "__depends_rpcgen.hpp"
#include "protocols.hpp"


// protocol stubs
namespace authc { 
void _protocolsStubs(bool add)
{
	static aio::Protocol::TStub<gnet::AddictionControl> gnet_AddictionControl;
	static aio::Protocol::TStub<gnet::AnnounceForbidInfo> gnet_AnnounceForbidInfo;
	static aio::Protocol::TStub<gnet::Challenge> gnet_Challenge;
	static aio::Protocol::TStub<gnet::CouponExchangeRep> gnet_CouponExchangeRep;
	static aio::Protocol::TStub<gnet::CouponExchangeReq> gnet_CouponExchangeReq;
	static aio::Protocol::TStub<gnet::DataBetweenAuAnyAndClient> gnet_DataBetweenAuAnyAndClient;
	static aio::Protocol::TStub<gnet::ErrorInfo> gnet_ErrorInfo;
	static aio::Protocol::TStub<gnet::GetUserCouponRep> gnet_GetUserCouponRep;
	static aio::Protocol::TStub<gnet::GetUserCouponReq> gnet_GetUserCouponReq;
	static aio::Protocol::TStub<gnet::InstantAddCashRep> gnet_InstantAddCashRep;
	static aio::Protocol::TStub<gnet::InstantAddCashReq> gnet_InstantAddCashReq;
	static aio::Protocol::TStub<gnet::KeepAlive> gnet_KeepAlive;
	static aio::Protocol::TStub<gnet::KeyExchange> gnet_KeyExchange;
	static aio::Protocol::TStub<gnet::OnlineAnnounce> gnet_OnlineAnnounce;
	static aio::Protocol::TStub<gnet::PortForward> gnet_PortForward;
	static aio::Protocol::TStub<gnet::Response> gnet_Response;
	static aio::Protocol::TStub<gnet::SSOGetTicketRep> gnet_SSOGetTicketRep;
	static aio::Protocol::TStub<gnet::SSOGetTicketReq> gnet_SSOGetTicketReq;

	if (add)
	{
		aio::Protocol::AddStub(&gnet_AddictionControl);
		aio::Protocol::AddStub(&gnet_AnnounceForbidInfo);
		aio::Protocol::AddStub(&gnet_Challenge);
		aio::Protocol::AddStub(&gnet_CouponExchangeRep);
		aio::Protocol::AddStub(&gnet_CouponExchangeReq);
		aio::Protocol::AddStub(&gnet_DataBetweenAuAnyAndClient);
		aio::Protocol::AddStub(&gnet_ErrorInfo);
		aio::Protocol::AddStub(&gnet_GetUserCouponRep);
		aio::Protocol::AddStub(&gnet_GetUserCouponReq);
		aio::Protocol::AddStub(&gnet_InstantAddCashRep);
		aio::Protocol::AddStub(&gnet_InstantAddCashReq);
		aio::Protocol::AddStub(&gnet_KeepAlive);
		aio::Protocol::AddStub(&gnet_KeyExchange);
		aio::Protocol::AddStub(&gnet_OnlineAnnounce);
		aio::Protocol::AddStub(&gnet_PortForward);
		aio::Protocol::AddStub(&gnet_Response);
		aio::Protocol::AddStub(&gnet_SSOGetTicketRep);
		aio::Protocol::AddStub(&gnet_SSOGetTicketReq);
	}
	else
	{
		aio::Protocol::DelStub(&gnet_AddictionControl);
		aio::Protocol::DelStub(&gnet_AnnounceForbidInfo);
		aio::Protocol::DelStub(&gnet_Challenge);
		aio::Protocol::DelStub(&gnet_CouponExchangeRep);
		aio::Protocol::DelStub(&gnet_CouponExchangeReq);
		aio::Protocol::DelStub(&gnet_DataBetweenAuAnyAndClient);
		aio::Protocol::DelStub(&gnet_ErrorInfo);
		aio::Protocol::DelStub(&gnet_GetUserCouponRep);
		aio::Protocol::DelStub(&gnet_GetUserCouponReq);
		aio::Protocol::DelStub(&gnet_InstantAddCashRep);
		aio::Protocol::DelStub(&gnet_InstantAddCashReq);
		aio::Protocol::DelStub(&gnet_KeepAlive);
		aio::Protocol::DelStub(&gnet_KeyExchange);
		aio::Protocol::DelStub(&gnet_OnlineAnnounce);
		aio::Protocol::DelStub(&gnet_PortForward);
		aio::Protocol::DelStub(&gnet_Response);
		aio::Protocol::DelStub(&gnet_SSOGetTicketRep);
		aio::Protocol::DelStub(&gnet_SSOGetTicketReq);
	}
}



void RegisterProtocols()
{
_protocolsStubs(true);
}

void UnregisterProtocols()
{
_protocolsStubs(false);
}
} 

